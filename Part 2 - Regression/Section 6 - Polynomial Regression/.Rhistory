setwd('C:/Users/Shwetanshu Rohatgi/Desktop/Machine Learning A-Z Template Folder/Part 2 - Regression/Section 5 - Multiple Linear Regression')
dataset = read.csv('50_Startups.csv')
View(dataset)
View(dataset)
dataset$State()
summary(dataset$State())
summary(dataset$State)
dataset$State = factor(dataset$State,
levels = c('California' ,'Florida' ,'New York'),
labels = c(1,2,3))
summary(dataset$State)
dataset$State = factor(dataset$State,
levels = c('New York', 'California', 'Florida'),
labels = c(1,2,3))
library(caTools)
set.seed(123)
split = sample.split(dataset$Profit, SplitRatio = 4/5) #dependent variable is first argument
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
View(test_set)
View(test_set)
View(training_set)
View(training_set)
regressor = lm(formula = Profit ~ .,
data = training_set)
#Multiple Linear regression
#setting up directory
setwd('C:/Users/Shwetanshu Rohatgi/Desktop/Machine Learning A-Z Template Folder/Part 2 - Regression/Section 5 - Multiple Linear Regression')
#reading CSV file
dataset = read.csv('50_Startups.csv')
#handling categorical data
dataset$State = factor(dataset$State,
levels = c('New York', 'California', 'Florida'),
labels = c(1,2,3))
#splitting dataset into training and testing sets
library(caTools)
set.seed(123)
split = sample.split(dataset$Profit, SplitRatio = 4/5) #dependent variable is first argument
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
#Multiple linear regressor
regressor = lm(formula = Profit ~ .,
data = training_set)
summary(regressor)
#Making predictions on test set
y_pred = predict(regressor, newdata = test_set)
y_pred
library(ggplot2)
ggplot2()+
geom_point(aes(x=test_set$R.D.Spend,y=test_set$Profit),
colour = "red")+
geom_line(aes(x = training_set$R.D.Spend, y = predict(regressor, newdata = training_set)),
colour = "green")+
xlab('R.D.Spend')+
ylab('Profits')+
ggtitle('Predicting profits wrt to R.D.Spend')
library(ggplot2)
ggplot()+
geom_point(aes(x=test_set$R.D.Spend,y=test_set$Profit),
colour = "red")+
geom_line(aes(x = training_set$R.D.Spend, y = predict(regressor, newdata = training_set)),
colour = "green")+
xlab('R.D.Spend')+
ylab('Profits')+
ggtitle('Predicting profits wrt to R.D.Spend')
regressor = lm(formula = Profit ~ R.DSpend + Admninistration + Marketing.Spend + State,
data = dataset) #take complete data to get insights
summary(regressor)
regressor = lm(formula = Profit ~ R.DSpend + Admninistration + Marketing.Spend,
data = dataset) #take complete data to get insights
summary(regressor)
regressor = lm(formula = Profit ~ R.DSpend + Admninistration + Marketing.Spend,
data = dataset) #take complete data to get insights
regressor = lm(formula = Profit ~ R.D.Spend + Admninistration + Marketing.Spend + State,
data = dataset) #take complete data to get insights
regressor = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend + State,
data = dataset) #take complete data to get insights
summary(regressor)
regressor = lm(formula = Profit ~ R.D.Spend + Admninistration + Marketing.Spend,
data = dataset) #take complete data to get insights
summary(regressor)
regressor = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend + State,
data = dataset) #take complete data to get insights
summary(regressor)
regressor = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend,
data = dataset) #take complete data to get insights
summary(regressor)
regressor = lm(formula = Profit ~ R.D.Spend + Marketing.Spend,
data = dataset) #take complete data to get insights
summary(regressor)
library(ggplot2)
ggplot()+
geom_point(aes(x=test_set$R.D.Spend,y=test_set$Profit),
colour = "red")+
geom_line(aes(x = training_set$R.D.Spend, y = predict(regressor, newdata = training_set)),
colour = "green")+
xlab('R.D.Spend')+
ylab('Profits')+
ggtitle('Predicting profits wrt to R.D.Spend')
regressor = lm(formula = Profit ~ R.D.Spend,
data = dataset) #take complete data to get insights
summary(regressor)
#Polynomial Linear regression
#setting up directory
setwd('C:/Users/Shwetanshu Rohatgi/Desktop/Machine Learning A-Z Template Folder/Part 2 - Regression/Section 6 - Polynomial Regression')
dataset = read.csv('Position_Salaries.csv')
View(dataset)
View(dataset)
dataset = dataset[2:3] #we are interested in COlumn 2,3 and in R index start from 0 and include last index.
lin_regressor = lm(formula = Salary ~. ,
data = dataset)
summary(lin_regressor)
t
dataset$Level2 = dataset$Level^2
dataset$Level3 = dataset$Level^3
poly_regressor = lm(formula = Salary ~.,
data = dataset)
summary(poly_regressor)
library(ggplot2)
ggplot()+
geom_point(aes(x=dataset$Level,y=dataset$Salary),
colour='red')+
geom_line(aes(x=dataset$Level,y=predict(lin_regressor,newdata = dataset)),
colour = 'blue')+
xlab('Levels')+
ylab('Salary')+
ggtitle('Linear Regression Model')
ggplot()+
geom_point(aes(x=dataset$Level,y=dataset$Salary),
colour='red')+
geom_line(aes(x=dataset$Level,y=predict(poly_regressor,newdata = dataset)),
colour = 'blue')+
xlab('Levels')+
ylab('Salary')+
ggtitle('Polynomial Regression Model')
dataset$Level4 = dataset$Level^4
poly_regressor = lm(formula = Salary ~.,
data = dataset)
ggplot()+
geom_point(aes(x=dataset$Level,y=dataset$Salary),
colour='red')+
geom_line(aes(x=dataset$Level,y=predict(poly_regressor,newdata = dataset)),
colour = 'blue')+
xlab('Levels')+
ylab('Salary')+
ggtitle('Polynomial Regression Model')
y_pred = predict(regressor, newdata = data.frame(Level = 6.5))
y_pred = predict(lin_regressor, newdata = data.frame(Level = 6.5))
y_pred = predict(poly_regressor, newdata = data.frame(Level = 6.5))
y_pred = predict(poly_regressor, newdata = data.frame(Level = 6.5, Level2 = Level^2, Level3 = Level^3, Level4 = Level^4))
y_pred = predict(poly_regressor, newdata = data.frame(Level = 6.5,
Level2 = 6.5^2,
Level3 = 6.5^3,
Level4 = 6.5^4))
x_grid = seq(min(dataset$Level),max(dataset$Level),0.1)
ggplot()+
geom_point(aes(x=dataset$Level,y=dataset$Salary),
colour='red')+
geom_line(aes(x_grid,y=predict(poly_regressor,newdata = data.frame(Level = x_grid))),
colour = 'blue')+
xlab('Levels')+
ylab('Salary')+
ggtitle('Polynomial Regression Model')
